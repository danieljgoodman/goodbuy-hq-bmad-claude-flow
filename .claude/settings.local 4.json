{
  "permissions": {
    "allow": [
      "mcp__ruv-swarm",
      "mcp__claude-flow",
      "Bash(find:*)",
      "Bash(npm run dev:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(cd:*)",
      "Read(//Users/danielgoodman/Downloads/**)",
      "Read(//var/folders/lg/jcr3rn7d4gjfjjympstp3lc40000gn/T/TemporaryItems/NSIRD_screencaptureui_91eHLw/**)",
      "Bash(npx:*)",
      "Bash(claude mcp:*)",
      "Bash(./claude-flow:*)",
      "mcp__flow-nexus__swarm_init",
      "mcp__flow-nexus__agent_spawn",
      "Read(//Users/danielgoodman/Documents/**)",
      "Bash(mkdir:*)",
      "Bash(npm run build:*)",
      "Bash(npm run:*)",
      "Bash(HOMESCREEN_URL=http://localhost:3001 node scripts/screenshot-capture.js)",
      "Bash(node:*)",
      "Bash(screencapture:*)",
      "Bash(curl:*)",
      "Read(//var/folders/lg/jcr3rn7d4gjfjjympstp3lc40000gn/T/TemporaryItems/NSIRD_screencaptureui_FkDaq0/**)",
      "Read(//var/folders/lg/jcr3rn7d4gjfjjympstp3lc40000gn/T/TemporaryItems/NSIRD_screencaptureui_REzUQk/**)",
      "Read(//var/folders/lg/jcr3rn7d4gjfjjympstp3lc40000gn/T/TemporaryItems/NSIRD_screencaptureui_orwo5M/**)",
      "Read(//var/folders/lg/jcr3rn7d4gjfjjympstp3lc40000gn/T/TemporaryItems/NSIRD_screencaptureui_GDQukw/**)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(cat:*)",
      "Read(//var/folders/lg/jcr3rn7d4gjfjjympstp3lc40000gn/T/TemporaryItems/NSIRD_screencaptureui_nY5TwU/**)",
      "Read(//var/folders/lg/jcr3rn7d4gjfjjympstp3lc40000gn/T/TemporaryItems/NSIRD_screencaptureui_8uC3mv/**)",
      "Bash(pkill:*)",
      "Bash(npm test:*)",
      "Bash(gh auth:*)",
      "Bash(gh repo create:*)",
      "Bash(git remote set-url:*)",
      "Bash(git commit:*)",
      "Bash(gh repo view:*)",
      "Bash(sed:*)",
      "Bash(open http://localhost:3001/admin)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx prisma db push)",
      "Bash(chmod:*)",
      "Bash(DATABASE_URL=\"file:./dev.db\" node scripts/seed-database.js)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx prisma generate)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx prisma db push --force-reset)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"Yes! Please proceed with the database reset. This is exactly what we need to get the admin panel working properly with real data.\" DATABASE_URL=\"file:./dev.db\" npx prisma db push --force-reset)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx prisma studio --port 5556)",
      "Bash(docker run:*)",
      "Bash(pg_ctl:*)",
      "Bash(brew services start:*)",
      "Bash(brew services:*)",
      "Bash(git reset:*)",
      "Bash(git clean:*)",
      "Bash(rm:*)",
      "Bash(DATABASE_URL=\"file:./dev.db\" node scripts/setup-admin.js)",
      "Bash(DATABASE_URL=\"postgresql://postgres.ssqbyqcxvzyvnfuedefr:yZJsem34dT82e8Bq@aws-1-ca-central-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1\" npx prisma generate)",
      "Bash(DATABASE_URL=\"postgresql://postgres.ssqbyqcxvzyvnfuedefr:yZJsem34dT82e8Bq@aws-1-ca-central-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1\" npx prisma db push)",
      "Bash(DATABASE_URL=\"postgresql://postgres.ssqbyqcxvzyvnfuedefr:yZJsem34dT82e8Bq@aws-1-ca-central-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1\" npx prisma db push --accept-data-loss)",
      "Read(//var/folders/lg/jcr3rn7d4gjfjjympstp3lc40000gn/T/TemporaryItems/NSIRD_screencaptureui_NHiOUz/**)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(git fetch:*)",
      "Bash(git remote set-head:*)",
      "Bash(brew install:*)",
      "Bash(npm rebuild:*)",
      "Bash(vercel:*)",
      "Bash(npm view:*)",
      "Bash(open http://localhost:3002/dashboard)",
      "Bash(open http://localhost:3002/evaluations)",
      "Bash(git stash push:*)",
      "Bash(git stash:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "claude-flow",
    "ruv-swarm"
  ]
}